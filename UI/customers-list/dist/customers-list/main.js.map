{"version":3,"sources":["./src/app/services/customer.service.ts","./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {CustomersResponse} from \"../data/customers.response\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  public listCustomers(): Observable<Array<CustomersResponse>> {\n    return this.httpClient.get<Array<CustomersResponse>>(\"http://localhost:8080/customers\");\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"wrapper\">\n  Filter By Country\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Select Country</mat-label>\n    <mat-select [(ngModel)]=\"selectedCountry\">\n      <mat-option value=\"all\">ALL</mat-option>\n      <mat-option value=\"cameron\">Cameron</mat-option>\n      <mat-option value=\"ethiopia\">Ethiopia</mat-option>\n      <mat-option value=\"morocco\">Morocco</mat-option>\n      <mat-option value=\"mozambique\">Mozambique</mat-option>\n      <mat-option value=\"uganda\">Uganda</mat-option>\n      <mat-option value=\"wrong numbers\">Wrong Numbers</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <br>\n  <br>\n  <ng-container *ngFor=\"let customer of customers$|async\">\n    <table *ngIf=\"customer.country\" class=\"mat-elevation-z5\">\n      <thead *ngIf=\"selectedCountry==customer.country.name.toLowerCase()||selectedCountry=='all'\">\n      <tr>\n        <th>Country Name</th>\n        <th>Country Code</th>\n      </tr>\n      <tr>\n        <td>{{customer.country.name}}</td>\n        <td>{{customer.country.code}}</td>\n      </tr>\n      <tr>\n        <th colspan=\"2\">Customers</th>\n      </tr>\n      <tr>\n        <td colspan=\"2\">\n          <table>\n            <thead>\n            <tr>\n              <th>Id</th>\n              <th>Name</th>\n              <th>Phone</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let person of customer.customers\">\n              <td>{{person.id}}</td>\n              <td>{{person.name}}</td>\n              <td>{{person.phone}}</td>\n            </tr>\n            </tbody>\n          </table>\n        </td>\n      </tr>\n      </thead>\n    </table>\n    <br>\n  </ng-container>\n</div>\n\n","import {Component} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {CustomersResponse} from './data/customers.response';\nimport {CustomerService} from './services/customer.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  customers$: Observable<Array<CustomersResponse>>;\n  selectedCountry: String = 'all';\n\n  constructor(private customerService: CustomerService) {\n    this.customers$ = customerService.listCustomers();\n  }\n\n\n}\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\nimport {CommonModule} from '@angular/common';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}